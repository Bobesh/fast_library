version: '3.8'

services:
  fastapi-app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: library
      DB_USER: library
      DB_PASSWORD: secret123

      APP_NAME: "Fast Library API"
      APP_VERSION: "1.0.0"
      APP_HOST: "0.0.0.0"
      APP_PORT: 8000

      API_KEY: "dev-api-key-123"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: library
      POSTGRES_USER: library
      POSTGRES_PASSWORD: secret123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/migrations/001_init.sql:/docker-entrypoint-initdb.d/001_init.sql
      - ./sql/migrations/002_add_borrowing_index.sql:/docker-entrypoint-initdb.d/002_add_borrowing_index.sql
      - ./sql/migrations/003_drop_status.sql:/docker-entrypoint-initdb.d/003_drop_status.sql
      - ./sql/migrations/004_add_isbn_unique.sql:/docker-entrypoint-initdb.d/004_add_isbn_unique.sql
      - ./sql/demo_data/001_base_data.sql:/docker-entrypoint-initdb.d/002_base_data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge